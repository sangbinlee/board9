<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev9.board.api.todo.TodoMapper">




	<select id="select">
	SELECT id, "name", quantity, price, created_by, last_modified_by, updated_time, create_time
	FROM public.todo
<!-- 	order by id desc -->
	</select>




	<insert id="insert">
	INSERT INTO public.todo
	(price, quantity, name)
	VALUES(#{price}, #{quantity}, #{name});
	</insert>

	<update id="update">
	UPDATE public.todo
	SET price=0, quantity=0, "name"=''
	WHERE id=0;
	</update>

	<delete id="delete">
	DELETE FROM public.todo
	WHERE id=0;
	</delete>









	<select id="select2" >
	select
		i.amount,
		c.name,
		c.image_url,
		c.email,
		i.id,
		i.date
	from
		invoices i
	join customers c on
		i.customer_id = c.u_id
	order by
		i.date desc
	limit 5;
	</select>

	<select id="select3">
	SELECT COUNT(*) FROM invoices
	</select>
	<select id="select4">
	SELECT COUNT(*) FROM customers
	</select>
	<select id="select5">
	select
		SUM(case when status = 'paid' then amount else 0 end) as "paid",
		SUM(case when status = 'pending' then amount else 0 end) as "pending"
	from
		invoices;
	</select>





	<sql id="where_1">
		<if test="query != null and !query.equals('')">
<!-- 		<if test="query != null "> -->
		WHERE
		customers.name ILIKE CONCAT('%', #{query}, '%')
		OR customers.email ILIKE CONCAT('%', #{query}, '%')
		OR invoices.amount::text ILIKE CONCAT('%', #{query}, '%')
		OR invoices.date::text ILIKE CONCAT('%', #{query}, '%')
		OR invoices.status ILIKE CONCAT('%', #{query}, '%')
		</if>
	</sql>




	<select id="select6">
		SELECT
			invoices.id,
			invoices.amount,
			invoices.date,
			invoices.status,
			customers.name,
			customers.email,
			customers.image_url
		FROM invoices
		JOIN customers ON invoices.customer_id = customers.u_id
		<include refid="where_1"></include>
		ORDER BY invoices.updated_time DESC, invoices.date DESC
		LIMIT #{limit} OFFSET #{offset}
	<!-- 	LIMIT #{limit} OFFSET CAST(#{offSet} AS numeric)
	int offSet = pageSize * (pageIndex-1); // 0 부터 나와야 1부터 시작  
	int limit = pageSize;
-->
	</select>
	<select id="select7">
		SELECT
			count(*)
		FROM invoices
		JOIN customers ON invoices.customer_id = customers.u_id
		<include refid="where_1"></include>
	</select>

	<select id="select8">
	SELECT u_id id, name
	FROM customers
	ORDER BY name ASC
	</select>

	<select id="select9">
	SELECT invoices.id, invoices.customer_id, invoices.amount, invoices.status, date
	FROM invoices
	WHERE invoices.id = #{id};
	</select>




	<select id="select10">
		SELECT
		  customers.id,
		  customers.name,
		  customers.email,
		  customers.image_url,
		  COUNT(invoices.id) AS total_invoices,
		  SUM(CASE WHEN invoices.status = 'pending' THEN invoices.amount ELSE 0 END) AS total_pending,
		  SUM(CASE WHEN invoices.status = 'paid' THEN invoices.amount ELSE 0 END) AS total_paid
		FROM customers
		LEFT JOIN invoices ON customers.id = invoices.customer_id
		WHERE
			customers.name ILIKE CONCAT('%', #{query}, '%')
			or
			customers.email ILIKE CONCAT('%', #{query}, '%')
		GROUP BY customers.id, customers.name, customers.email, customers.image_url
		ORDER BY customers.name ASC
	</select>

















</mapper>